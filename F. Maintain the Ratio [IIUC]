#include <bits/stdc++.h>
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
typedef long long int ll;
typedef tree< ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update > ordered_set;

const double eps = 1e-12;
const int mx = 1e5+50;

ll sum0[mx], sum1[mx];
int main(){
    optimize();

    int tc; cin>>tc;
    for(int t=1; t<=tc; t++){
        string line; int k;
        cin>>line>>k;
        ll len = line.size();

        for(int i=0; i<len; i++){
            sum0[i+1] = (line[i] == '0') + sum0[i];
            sum1[i+1] = (line[i] == '1') + sum1[i];
        }
        ordered_set ps;
        map <int, int> cnt;

        ps.insert(0);
        cnt[0]++;

        ll ans = 0;
        for(int i=1; i<=len; i++){
            ll d1 = sum0[i] - (k * sum1[i]);

            ans += (ps.order_of_key(d1)) + cnt[d1];
            ps.insert(d1);
            cnt[d1]++;
        }
        cout<<"Case "<<t<<": "<<ans<<endl;
    }
    return 0;
}
