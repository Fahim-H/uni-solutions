//https://algo.codemarshal.org/contests/ncpc18/problems/I

#include <bits/stdc++.h>
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'
typedef long long int ll;
using namespace std;
const int mx = 10e4+50;
ll arr[mx];

bool check(int m, int k, int d){
    int last = arr[1] + d;
    k--;
    for(int i=2; i<=m; i++){
        if(abs(arr[i]-last > d)){
            if(k == 0)return false;
            last = arr[i] + d;
            k--;
        }
    }
    return true;
}
int main(){
    optimize();
    int tc; cin>>tc;

    for(int t=1; t<=tc; t++){
        int n,m,k; cin>>n>>m>>k;
        for(int i=1; i<=m; i++)cin>>arr[i];

        int l = 0, r = n, ans;
        while(l <= r){
            int mid = (l+r)>>1;
            if(check(m,k,mid)){
                ans = mid;
                r = mid-1;
            }
            else l = mid+1;
        }
        cout<<"Case "<<t<<": "<<ans<<endl;
    }
    return 0;
}
